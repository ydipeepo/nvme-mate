<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ARG_CLEAN_HELP" xml:space="preserve">
    <value>Delete all counters registered in the Performance Monitor and exit without changing the settings.</value>
  </data>
  <data name="ARG_HYDRA_HELP" xml:space="preserve">
    <value>Do not delete the counters registered in Performance Monitor when you exit.</value>
  </data>
  <data name="ARG_INTERVAL_HELP" xml:space="preserve">
    <value>Specifies the interval in milliseconds at which the S.M.A.R.T. attributes are observed and the counters are updated.</value>
  </data>
  <data name="ARG_LANG_HELP" xml:space="preserve">
    <value>Forces the use of the specified language resource.</value>
  </data>
  <data name="ARG_PLOT_HELP" xml:space="preserve">
    <value>Make the S.M.A.R.T. attributes plot in the console.</value>
  </data>
  <data name="ARG_SCAN_HELP" xml:space="preserve">
    <value>Make sure to only scan physical drives and exit.</value>
  </data>
  <data name="ARG_SCAN_RANGE_HELP" xml:space="preserve">
    <value>Specifies the scan range for physical drives.</value>
  </data>
  <data name="ARG_SKIP_HELP" xml:space="preserve">
    <value>Ignores physical drive(s) with the specified number when scanning.</value>
  </data>
  <data name="AVAILABLE_SPARE_HELP" xml:space="preserve">
    <value>Contains a normalized percentage (0 to 100%) of the remaining spare capacity available. Starts from 100 and decrements.</value>
  </data>
  <data name="AVAILABLE_SPARE_NAME" xml:space="preserve">
    <value>Available Spare</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="AVAILABLE_SPARE_THRESHOLD_HELP" xml:space="preserve">
    <value>Threshold is set to 10%.</value>
  </data>
  <data name="AVAILABLE_SPARE_THRESHOLD_NAME" xml:space="preserve">
    <value>Available Spare Threshold</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="CATEGORY_HELP" xml:space="preserve">
    <value>A set of counters containing the S.M.A.R.T. attributes of the detected NVMe drive.</value>
  </data>
  <data name="CATEGORY_NAME" xml:space="preserve">
    <value>NVMe S.M.A.R.T.</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="CONTROLLER_BUSY_TIME_HELP" xml:space="preserve">
    <value>Contains the amount of time the controller is busy with I/O commands. The controller is busy when there is a command outstanding to an I/O Queue. (Specifically, a command was issued by way of an I/O Submission Queue Tail doorbell write and the corresponding completion queue entry has not been posted yet to the associated I/O Completion Queue.) This value is reported in minutes.</value>
  </data>
  <data name="CONTROLLER_BUSY_TIME_NAME" xml:space="preserve">
    <value>Controller Busy Time (in minutes)</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="CRITICAL_COMPOSITE_TEMPERATURE_TIME_HELP" xml:space="preserve">
    <value>Contains the amount of time in minutes that the controller is operational and the Composite Temperature is greater the Critical Composite Temperature Threshold (CCTEMP) field in the Identify Controller data structure.</value>
  </data>
  <data name="CRITICAL_COMPOSITE_TEMPERATURE_TIME_NAME" xml:space="preserve">
    <value>Critical Composite Temperature Time</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="DATA_UNITS_READ_HELP" xml:space="preserve">
    <value>Contains the number of 512 byte data units the host has read from the controller; this value does not include metadata. This value is reported in thousands (i.e., a value of 1 corresponds to 1000 units of 512 bytes read) and is rounded up. When the LBA size is a value other than 512 bytes, the controller shall convert the amount of data read to 512 byte units.</value>
  </data>
  <data name="DATA_UNITS_READ_NAME" xml:space="preserve">
    <value>Data Units Read (in LBAs)</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="DATA_UNITS_WRITE_HELP" xml:space="preserve">
    <value>Contains the number of 512 byte data units the host has written to the controller; this value does not include metadata. This value is reported in thousands (i.e., a value of 1 corresponds to 1000 units of 512 bytes written) and is rounded up. When the LBA size is a value other than 512 bytes, the controller shall convert the amount of data written to 512 byte units. For the NVM command set, logical blocks written as part of Write operations shall be included in this value. Write Uncorrectable commands shall not impact this value.</value>
  </data>
  <data name="DATA_UNITS_WRITE_NAME" xml:space="preserve">
    <value>Data Units Write (in LBAs)</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="DESCRIPTION" xml:space="preserve">
    <value>NVMeMate monitors the S.M.A.R.T. attributes of your NVMe SSDs and provides that information to the Windows Performance Monitor.</value>
  </data>
  <data name="ERROR" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ERROR_ALREADY_RUNNING" xml:space="preserve">
    <value>Program is already Running on this computer.</value>
  </data>
  <data name="ERROR_UNSUPPORTED_BECAUSE_NOT_X64" xml:space="preserve">
    <value>Program cannot run in non 64-bit environments.</value>
  </data>
  <data name="ERROR_UNSUPPORTED_OPERATING_SYSTEM" xml:space="preserve">
    <value>Program cannot run on this operating system.</value>
  </data>
  <data name="HOST_READ_COMMANDS_HELP" xml:space="preserve">
    <value>Contains the number of read commands issued to the controller.</value>
  </data>
  <data name="HOST_READ_COMMANDS_NAME" xml:space="preserve">
    <value>Host Read Commands</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="HOST_WRITE_COMMANDS_HELP" xml:space="preserve">
    <value>Contains the number of write commands issued to the controller.</value>
  </data>
  <data name="HOST_WRITE_COMMANDS_NAME" xml:space="preserve">
    <value>Host Write Commands</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="LOG_CANNOT_DETECT_ANY_NVME_DRIVES" xml:space="preserve">
    <value>Couldn't find any NVMe drives.
</value>
    <comment>\n</comment>
  </data>
  <data name="LOG_DETECTING_NVME_DRIVES" xml:space="preserve">
    <value>Detecting NVMe drives...
</value>
    <comment>\n</comment>
  </data>
  <data name="LOG_FAILED_TO_QUERY_SMART" xml:space="preserve">
    <value>S.M.A.R.T. attributes query failed.</value>
  </data>
  <data name="LOG_QUITTING" xml:space="preserve">
    <value>Quitting...
</value>
    <comment>\n</comment>
  </data>
  <data name="LOG_REGISTERING_PERFORMANCE_COUNTERS" xml:space="preserve">
    <value>Registering performance counters...
</value>
    <comment>\n</comment>
  </data>
  <data name="LOG_START_MONITORING" xml:space="preserve">
    <value>Start monitoring.
</value>
    <comment>\n</comment>
  </data>
  <data name="LOG_UNREGISTERING_PERFORMANCE_COUNTERS" xml:space="preserve">
    <value>Unregistering performance counters...
</value>
    <comment>\n</comment>
  </data>
  <data name="MEDIA_ERRORS_HELP" xml:space="preserve">
    <value>Contains the number of occurrences where the controller detected an unrecovered data integrity error. Errors such as uncorrectable ECC, CRC checksum failure, or LBA tag mismatch are included in this field.</value>
  </data>
  <data name="MEDIA_ERRORS_NAME" xml:space="preserve">
    <value>Media Errors</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="NOT_AVAILABLE" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="NUMBER_OF_ERROR_INFORMATION_LOG_ENTRIES_HELP" xml:space="preserve">
    <value>Contains the number of Error Information log entries over the life of the controller.</value>
  </data>
  <data name="NUMBER_OF_ERROR_INFORMATION_LOG_ENTRIES_NAME" xml:space="preserve">
    <value>Number of Error Information Log Entries</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="PERCENTAGE_USED_ESTIMATE_HELP" xml:space="preserve">
    <value>(Value allowed to exceed 100%). A value of 100 indicates that the estimated endurance of the device has been consumed, but may not indicate a device failure. The value is allowed to exceed 100. Percentages greater than 254 shall be represented as 255. This value shall be updated once per power-on hour (when the controller is not in a sleep state).</value>
  </data>
  <data name="PERCENTAGE_USED_ESTIMATE_NAME" xml:space="preserve">
    <value>Percentage Used Estimate</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="POWER_CYCLES_HELP" xml:space="preserve">
    <value>Contains the number of power cycles.</value>
  </data>
  <data name="POWER_CYCLES_NAME" xml:space="preserve">
    <value>Power Cycles</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="POWER_ON_HOURS_HELP" xml:space="preserve">
    <value>Contains the number of power-on hours. This does not include time that the controller was powered and in a low-power state condition.</value>
  </data>
  <data name="POWER_ON_HOURS_NAME" xml:space="preserve">
    <value>Power-On Hours</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="TEMPERATURE_DEG_CELSIUS_HELP" xml:space="preserve">
    <value>Reports overall Device current temperature in deg. Celsius.</value>
  </data>
  <data name="TEMPERATURE_DEG_CELSIUS_NAME" xml:space="preserve">
    <value>Temperature (deg. C)</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="TEMPERATURE_KELVIN_HELP" xml:space="preserve">
    <value>Reports overall Device current temperature in Kelvin.</value>
  </data>
  <data name="TEMPERATURE_KELVIN_NAME" xml:space="preserve">
    <value>Temperature (K)</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="UNSAFE_SHUTDOWNS_HELP" xml:space="preserve">
    <value>Contains the number of unsafe shutdowns. This count is incremented when a shutdown notification (CC.SHN) is not received prior to loss of power.</value>
  </data>
  <data name="UNSAFE_SHUTDOWNS_NAME" xml:space="preserve">
    <value>Unsafe Shutdowns</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
  <data name="WARNING_COMPOSITE_TEMPERATURE_TIME_HELP" xml:space="preserve">
    <value>Contains the amount of time in minutes that the controller is operational and the Composite Temperature is greater than or equal to the Warning Composite Temperature Threshold (WCTEMP) field and less than the Critical Composite Temperature Threshold (CCTEMP) field in the Identify Controller data structure.</value>
  </data>
  <data name="WARNING_COMPOSITE_TEMPERATURE_TIME_NAME" xml:space="preserve">
    <value>Warning Composite Temperature Time</value>
    <comment>DO NOT EDIT THIS</comment>
  </data>
</root>